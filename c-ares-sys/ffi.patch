--- src/ffi-orig.rs	2015-08-15 14:28:02.334017837 +0100
+++ src/ffi.rs	2015-08-15 12:02:26.254245118 +0100
@@ -1,11 +1,24 @@
+use libc::{
+    in_addr,
+    size_t,
+    sockaddr,
+    socklen_t,
+    timeval,
+};
+
+pub type Struct_in_addr = in_addr;
+pub type Struct_sockaddr = sockaddr;
+pub type Struct_timeval = timeval;
+
 /* automatically generated by rust-bindgen */
 
 pub type ares_socklen_t = socklen_t;
+pub type __cares_rule_01__ = [::libc::c_char; 1usize];
 pub type __cares_rule_02__ = [::libc::c_char; 1usize];
 pub type __cares_rule_03__ = [::libc::c_char; 1usize];
 pub type ares_socket_t = ::libc::c_int;
 pub type ares_sock_state_cb =
-    ::std::option::Option<extern "C" fn(data: *mut ::libc::c_void,
+    ::std::option::Option<unsafe extern "C" fn(data: *mut ::libc::c_void,
                                         socket_fd: ares_socket_t,
                                         readable: ::libc::c_int,
                                         writable: ::libc::c_int) -> ()>;
@@ -42,24 +55,24 @@
 pub enum Struct_ares_channeldata { }
 pub type ares_channel = *mut Struct_ares_channeldata;
 pub type ares_callback =
-    ::std::option::Option<extern "C" fn(arg: *mut ::libc::c_void,
+    ::std::option::Option<unsafe extern "C" fn(arg: *mut ::libc::c_void,
                                         status: ::libc::c_int,
                                         timeouts: ::libc::c_int,
                                         abuf: *mut ::libc::c_uchar,
                                         alen: ::libc::c_int) -> ()>;
 pub type ares_host_callback =
-    ::std::option::Option<extern "C" fn(arg: *mut ::libc::c_void,
+    ::std::option::Option<unsafe extern "C" fn(arg: *mut ::libc::c_void,
                                         status: ::libc::c_int,
                                         timeouts: ::libc::c_int,
                                         hostent: *mut Struct_hostent) -> ()>;
 pub type ares_nameinfo_callback =
-    ::std::option::Option<extern "C" fn(arg: *mut ::libc::c_void,
+    ::std::option::Option<unsafe extern "C" fn(arg: *mut ::libc::c_void,
                                         status: ::libc::c_int,
                                         timeouts: ::libc::c_int,
                                         node: *mut ::libc::c_char,
                                         service: *mut ::libc::c_char) -> ()>;
 pub type ares_sock_create_callback =
-    ::std::option::Option<extern "C" fn(socket_fd: ares_socket_t,
+    ::std::option::Option<unsafe extern "C" fn(socket_fd: ares_socket_t,
                                         _type: ::libc::c_int,
                                         data: *mut ::libc::c_void)
                               -> ::libc::c_int>;
@@ -280,14 +293,10 @@
                             salen: ares_socklen_t, flags: ::libc::c_int,
                             callback: ares_nameinfo_callback,
                             arg: *mut ::libc::c_void) -> ();
-    pub fn ares_fds(channel: ares_channel, read_fds: *mut fd_set,
-                    write_fds: *mut fd_set) -> ::libc::c_int;
     pub fn ares_getsock(channel: ares_channel, socks: *mut ares_socket_t,
                         numsocks: ::libc::c_int) -> ::libc::c_int;
     pub fn ares_timeout(channel: ares_channel, maxtv: *mut Struct_timeval,
                         tv: *mut Struct_timeval) -> *mut Struct_timeval;
-    pub fn ares_process(channel: ares_channel, read_fds: *mut fd_set,
-                        write_fds: *mut fd_set) -> ();
     pub fn ares_process_fd(channel: ares_channel, read_fd: ares_socket_t,
                            write_fd: ares_socket_t) -> ();
     pub fn ares_create_query(name: *const ::libc::c_char,
