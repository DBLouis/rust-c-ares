--- src/ffi.rs.orig	2017-01-27 19:20:51.378318517 +0000
+++ src/ffi.rs	2017-01-27 19:20:51.448320094 +0000
@@ -1,4 +1,11 @@
 /* automatically generated by rust-bindgen */
+#![allow(non_camel_case_types, non_snake_case)]
+use c_types::fd_set;
+use c_types::hostent;
+use c_types::in_addr;
+use c_types::sockaddr;
+use c_types::socklen_t;
+use libc::timeval;
 
 #[repr(C)]
 pub struct __BindgenUnionField<T>(::std::marker::PhantomData<T>);
@@ -25,7 +32,11 @@
     }
 }
 pub type ares_socklen_t = socklen_t;
-pub type ares_socket_t = ::std::os::raw::c_int;
+#[cfg(windows)]
+pub type ares_socket_t = ::std::os::windows::io::RawSocket;
+#[cfg(unix)]
+pub type ares_socket_t = ::std::os::unix::io::RawFd;
+
 pub type ares_sock_state_cb =
     ::std::option::Option<unsafe extern "C" fn(data:
                                                    *mut ::std::os::raw::c_void,
@@ -59,14 +70,12 @@
     pub nsort: ::std::os::raw::c_int,
     pub ednspsz: ::std::os::raw::c_int,
 }
-#[test]
-fn bindgen_test_layout_ares_options() {
-    assert_eq!(::std::mem::size_of::<ares_options>() , 104usize);
-    assert_eq!(::std::mem::align_of::<ares_options>() , 8usize);
-}
 impl Clone for ares_options {
     fn clone(&self) -> Self { *self }
 }
+impl Default for ares_options {
+    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
+}
 #[repr(C)]
 #[derive(Debug, Copy, Clone)]
 pub struct ares_channeldata([u8; 0]);
@@ -318,35 +327,18 @@
     pub _S6_u8: __BindgenUnionField<[::std::os::raw::c_uchar; 16usize]>,
     pub bindgen_union_field: [u8; 16usize],
 }
-#[test]
-fn bindgen_test_layout_ares_in6_addr__bindgen_ty_1() {
-    assert_eq!(::std::mem::size_of::<ares_in6_addr__bindgen_ty_1>() ,
-               16usize);
-    assert_eq!(::std::mem::align_of::<ares_in6_addr__bindgen_ty_1>() ,
-               1usize);
-}
 impl Clone for ares_in6_addr__bindgen_ty_1 {
     fn clone(&self) -> Self { *self }
 }
-#[test]
-fn bindgen_test_layout_ares_in6_addr() {
-    assert_eq!(::std::mem::size_of::<ares_in6_addr>() , 16usize);
-    assert_eq!(::std::mem::align_of::<ares_in6_addr>() , 1usize);
-}
 impl Clone for ares_in6_addr {
     fn clone(&self) -> Self { *self }
 }
 #[repr(C)]
-#[derive(Debug, Copy)]
+#[derive(Copy)]
 pub struct ares_addrttl {
     pub ipaddr: in_addr,
     pub ttl: ::std::os::raw::c_int,
 }
-#[test]
-fn bindgen_test_layout_ares_addrttl() {
-    assert_eq!(::std::mem::size_of::<ares_addrttl>() , 8usize);
-    assert_eq!(::std::mem::align_of::<ares_addrttl>() , 4usize);
-}
 impl Clone for ares_addrttl {
     fn clone(&self) -> Self { *self }
 }
@@ -356,11 +348,6 @@
     pub ip6addr: ares_in6_addr,
     pub ttl: ::std::os::raw::c_int,
 }
-#[test]
-fn bindgen_test_layout_ares_addr6ttl() {
-    assert_eq!(::std::mem::size_of::<ares_addr6ttl>() , 20usize);
-    assert_eq!(::std::mem::align_of::<ares_addr6ttl>() , 4usize);
-}
 impl Clone for ares_addr6ttl {
     fn clone(&self) -> Self { *self }
 }
@@ -373,11 +360,6 @@
     pub weight: ::std::os::raw::c_ushort,
     pub port: ::std::os::raw::c_ushort,
 }
-#[test]
-fn bindgen_test_layout_ares_srv_reply() {
-    assert_eq!(::std::mem::size_of::<ares_srv_reply>() , 24usize);
-    assert_eq!(::std::mem::align_of::<ares_srv_reply>() , 8usize);
-}
 impl Clone for ares_srv_reply {
     fn clone(&self) -> Self { *self }
 }
@@ -388,11 +370,6 @@
     pub host: *mut ::std::os::raw::c_char,
     pub priority: ::std::os::raw::c_ushort,
 }
-#[test]
-fn bindgen_test_layout_ares_mx_reply() {
-    assert_eq!(::std::mem::size_of::<ares_mx_reply>() , 24usize);
-    assert_eq!(::std::mem::align_of::<ares_mx_reply>() , 8usize);
-}
 impl Clone for ares_mx_reply {
     fn clone(&self) -> Self { *self }
 }
@@ -403,11 +380,6 @@
     pub txt: *mut ::std::os::raw::c_uchar,
     pub length: usize,
 }
-#[test]
-fn bindgen_test_layout_ares_txt_reply() {
-    assert_eq!(::std::mem::size_of::<ares_txt_reply>() , 24usize);
-    assert_eq!(::std::mem::align_of::<ares_txt_reply>() , 8usize);
-}
 impl Clone for ares_txt_reply {
     fn clone(&self) -> Self { *self }
 }
@@ -419,11 +391,6 @@
     pub length: usize,
     pub record_start: ::std::os::raw::c_uchar,
 }
-#[test]
-fn bindgen_test_layout_ares_txt_ext() {
-    assert_eq!(::std::mem::size_of::<ares_txt_ext>() , 32usize);
-    assert_eq!(::std::mem::align_of::<ares_txt_ext>() , 8usize);
-}
 impl Clone for ares_txt_ext {
     fn clone(&self) -> Self { *self }
 }
@@ -438,11 +405,6 @@
     pub order: ::std::os::raw::c_ushort,
     pub preference: ::std::os::raw::c_ushort,
 }
-#[test]
-fn bindgen_test_layout_ares_naptr_reply() {
-    assert_eq!(::std::mem::size_of::<ares_naptr_reply>() , 48usize);
-    assert_eq!(::std::mem::align_of::<ares_naptr_reply>() , 8usize);
-}
 impl Clone for ares_naptr_reply {
     fn clone(&self) -> Self { *self }
 }
@@ -457,11 +419,6 @@
     pub expire: ::std::os::raw::c_uint,
     pub minttl: ::std::os::raw::c_uint,
 }
-#[test]
-fn bindgen_test_layout_ares_soa_reply() {
-    assert_eq!(::std::mem::size_of::<ares_soa_reply>() , 40usize);
-    assert_eq!(::std::mem::align_of::<ares_soa_reply>() , 8usize);
-}
 impl Clone for ares_soa_reply {
     fn clone(&self) -> Self { *self }
 }
@@ -559,21 +516,9 @@
     pub addr6: __BindgenUnionField<ares_in6_addr>,
     pub bindgen_union_field: [u32; 4usize],
 }
-#[test]
-fn bindgen_test_layout_ares_addr_node__bindgen_ty_1() {
-    assert_eq!(::std::mem::size_of::<ares_addr_node__bindgen_ty_1>() ,
-               16usize);
-    assert_eq!(::std::mem::align_of::<ares_addr_node__bindgen_ty_1>() ,
-               4usize);
-}
 impl Clone for ares_addr_node__bindgen_ty_1 {
     fn clone(&self) -> Self { *self }
 }
-#[test]
-fn bindgen_test_layout_ares_addr_node() {
-    assert_eq!(::std::mem::size_of::<ares_addr_node>() , 32usize);
-    assert_eq!(::std::mem::align_of::<ares_addr_node>() , 8usize);
-}
 impl Clone for ares_addr_node {
     fn clone(&self) -> Self { *self }
 }
@@ -593,21 +538,9 @@
     pub addr6: __BindgenUnionField<ares_in6_addr>,
     pub bindgen_union_field: [u32; 4usize],
 }
-#[test]
-fn bindgen_test_layout_ares_addr_port_node__bindgen_ty_1() {
-    assert_eq!(::std::mem::size_of::<ares_addr_port_node__bindgen_ty_1>() ,
-               16usize);
-    assert_eq!(::std::mem::align_of::<ares_addr_port_node__bindgen_ty_1>() ,
-               4usize);
-}
 impl Clone for ares_addr_port_node__bindgen_ty_1 {
     fn clone(&self) -> Self { *self }
 }
-#[test]
-fn bindgen_test_layout_ares_addr_port_node() {
-    assert_eq!(::std::mem::size_of::<ares_addr_port_node>() , 40usize);
-    assert_eq!(::std::mem::align_of::<ares_addr_port_node>() , 8usize);
-}
 impl Clone for ares_addr_port_node {
     fn clone(&self) -> Self { *self }
 }
